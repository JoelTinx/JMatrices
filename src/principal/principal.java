
/*
 * principal.java
 *
 * Created on 13/12/2008, 11:56:11 AM
 */

package principal;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.io.IOException;
import javax.swing.BorderFactory;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.border.BevelBorder;
import javax.swing.table.DefaultTableModel;
import nucleo.matriz;
import java.io.*;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;

/**
 * @author Joel Tinx
 */

public class principal extends javax.swing.JFrame {

    /** Creates new form principal */
    public principal() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(principal.class.getResource("/iconos/java.png")));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        acerca_de = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Dialogo_oBasicas = new javax.swing.JDialog();
        Sel_matriz1 = new javax.swing.JComboBox();
        Sel_operacionB = new javax.swing.JComboBox();
        Sel_matriz2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ResolverB = new javax.swing.JButton();
        Dialogo_oAvanzadas = new javax.swing.JDialog();
        Sel_operacionA = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Sel_matriz = new javax.swing.JComboBox();
        ResolverA = new javax.swing.JButton();
        Modificar = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        sel_matrizm = new javax.swing.JComboBox();
        ModificarMtriz = new javax.swing.JButton();
        CMagico = new javax.swing.JDialog();
        PanelCuadradoMagico = new javax.swing.JPanel();
        sp2 = new javax.swing.JScrollPane();
        SelTamanio = new javax.swing.JSpinner();
        ResolverCM = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        NuevaMatriz = new javax.swing.JButton();
        RedimensionarMatriz = new javax.swing.JButton();
        ModificarMatriz = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        AbrirFichero = new javax.swing.JButton();
        GuardarFichero = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        OperacionesBasicas = new javax.swing.JButton();
        OperacionesAvanzadas = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        CMagic = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        AcercaDe = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        Salirme = new javax.swing.JButton();
        PanelPrincipal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PanelResultado = new javax.swing.JTextPane();
        PanelTamanio = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        NumeroFilas = new javax.swing.JSpinner();
        EsCuadrada = new javax.swing.JRadioButton();
        EsRectangular = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Numerocolumnas = new javax.swing.JSpinner();
        BotonAceptar = new javax.swing.JButton();
        PanelMatriz = new javax.swing.JPanel();
        sp = new javax.swing.JScrollPane();
        BotonInsertar = new javax.swing.JButton();
        BotonCancelar = new javax.swing.JButton();
        BotonLimpiar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        MArchivo = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        salir = new javax.swing.JMenuItem();
        MEditar = new javax.swing.JMenu();
        Reiniar = new javax.swing.JMenuItem();
        MOperaciones = new javax.swing.JMenu();
        MOBasicas = new javax.swing.JMenu();
        MOSuma = new javax.swing.JMenuItem();
        MOMultiplicacion = new javax.swing.JMenuItem();
        MOAvanzadas = new javax.swing.JMenu();
        MODeterminante = new javax.swing.JMenuItem();
        MOInversa = new javax.swing.JMenuItem();
        MOAdjunta = new javax.swing.JMenuItem();
        MOEscalonada = new javax.swing.JMenuItem();
        MOTranspuesta = new javax.swing.JMenuItem();
        MOTraza = new javax.swing.JMenuItem();
        MOOtro = new javax.swing.JMenuItem();
        MComplementos = new javax.swing.JMenu();
        CuadradoMagico = new javax.swing.JMenuItem();
        MAyuda = new javax.swing.JMenu();
        Manual = new javax.swing.JMenuItem();
        AcercaDeMi = new javax.swing.JMenuItem();

        acerca_de.setTitle("Acerca de");
        acerca_de.setUndecorated(true);
        acerca_de.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                acerca_deMousePressed(evt);
            }
        });
        acerca_de.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                acerca_deMouseDragged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/aboutx.png"))); // NOI18N
        jLabel1.setToolTipText("Software para el desarrollo");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/sip.png"))); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(141, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout acerca_deLayout = new javax.swing.GroupLayout(acerca_de.getContentPane());
        acerca_de.getContentPane().setLayout(acerca_deLayout);
        acerca_deLayout.setHorizontalGroup(
            acerca_deLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        acerca_deLayout.setVerticalGroup(
            acerca_deLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        Dialogo_oBasicas.setTitle("Operacion Basica");

        Sel_matriz1.setFont(new java.awt.Font("Candara", 0, 14));

        Sel_operacionB.setFont(new java.awt.Font("Candara", 0, 14));
        Sel_operacionB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Suma", "Multiplicacion" }));

        Sel_matriz2.setFont(new java.awt.Font("Candara", 0, 14));

        jLabel6.setText("Matriz 1 :");

        jLabel7.setText(" Operacion  :");

        jLabel8.setText("Matriz 2 :");

        ResolverB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/solve.png"))); // NOI18N
        ResolverB.setText("Resolver");
        ResolverB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResolverBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Dialogo_oBasicasLayout = new javax.swing.GroupLayout(Dialogo_oBasicas.getContentPane());
        Dialogo_oBasicas.getContentPane().setLayout(Dialogo_oBasicasLayout);
        Dialogo_oBasicasLayout.setHorizontalGroup(
            Dialogo_oBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialogo_oBasicasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Dialogo_oBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Sel_matriz1, 0, 54, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addGroup(Dialogo_oBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Dialogo_oBasicasLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(ResolverB))
                    .addGroup(Dialogo_oBasicasLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(Dialogo_oBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(Sel_operacionB, 0, 116, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(Dialogo_oBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(Sel_matriz2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        Dialogo_oBasicasLayout.setVerticalGroup(
            Dialogo_oBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialogo_oBasicasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Dialogo_oBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Dialogo_oBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sel_matriz1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sel_operacionB, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(Sel_matriz2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(ResolverB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Dialogo_oAvanzadas.setTitle("Operacion Avanzada");

        Sel_operacionA.setFont(new java.awt.Font("Tahoma", 0, 12));
        Sel_operacionA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Determinante", "Inversa", "Adjunta", "Escalonada", "Transpuesta", "Traza", "Otro" }));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14));
        jLabel4.setText("Seleccione Operacion : ");

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14));
        jLabel5.setText("Seleccione Matriz  : ");

        Sel_matriz.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        Sel_matriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sel_matrizActionPerformed(evt);
            }
        });

        ResolverA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/solve.png"))); // NOI18N
        ResolverA.setText("Resolver");
        ResolverA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResolverAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Dialogo_oAvanzadasLayout = new javax.swing.GroupLayout(Dialogo_oAvanzadas.getContentPane());
        Dialogo_oAvanzadas.getContentPane().setLayout(Dialogo_oAvanzadasLayout);
        Dialogo_oAvanzadasLayout.setHorizontalGroup(
            Dialogo_oAvanzadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialogo_oAvanzadasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Dialogo_oAvanzadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Dialogo_oAvanzadasLayout.createSequentialGroup()
                        .addGroup(Dialogo_oAvanzadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(Dialogo_oAvanzadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Sel_operacionA, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Sel_matriz, 0, 128, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Dialogo_oAvanzadasLayout.createSequentialGroup()
                        .addComponent(ResolverA, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
        );
        Dialogo_oAvanzadasLayout.setVerticalGroup(
            Dialogo_oAvanzadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialogo_oAvanzadasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Dialogo_oAvanzadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Sel_operacionA, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(Dialogo_oAvanzadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sel_matriz, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(ResolverA, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Modificar.setTitle("Modifica Matriz");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel9.setText("Seleccione Matriz a modificar : ");

        sel_matrizm.setFont(new java.awt.Font("Tahoma", 0, 14));
        sel_matrizm.setModel(new javax.swing.DefaultComboBoxModel(ListaMatrices()));

        ModificarMtriz.setText("Modificar Matriz");
        ModificarMtriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarMtrizActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ModificarLayout = new javax.swing.GroupLayout(Modificar.getContentPane());
        Modificar.getContentPane().setLayout(ModificarLayout);
        ModificarLayout.setHorizontalGroup(
            ModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModificarLayout.createSequentialGroup()
                .addGroup(ModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ModificarLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(sel_matrizm, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ModificarLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(ModificarMtriz, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        ModificarLayout.setVerticalGroup(
            ModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModificarLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(ModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(sel_matrizm, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(ModificarMtriz, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        CMagico.setTitle("Cuadrado Magico");

        PanelCuadradoMagico.setBackground(new java.awt.Color(255, 255, 255));
        PanelCuadradoMagico.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 102, 102), new java.awt.Color(0, 0, 0)));

        sp2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout PanelCuadradoMagicoLayout = new javax.swing.GroupLayout(PanelCuadradoMagico);
        PanelCuadradoMagico.setLayout(PanelCuadradoMagicoLayout);
        PanelCuadradoMagicoLayout.setHorizontalGroup(
            PanelCuadradoMagicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sp2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
        );
        PanelCuadradoMagicoLayout.setVerticalGroup(
            PanelCuadradoMagicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sp2, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        );

        SelTamanio.setBackground(new java.awt.Color(204, 255, 204));
        SelTamanio.setFont(new java.awt.Font("Tahoma", 0, 24));
        SelTamanio.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(3), null, Integer.valueOf(2)));
        SelTamanio.setToolTipText("Escoja el tamaño de cuadrado");
        SelTamanio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        ResolverCM.setFont(new java.awt.Font("Tahoma", 0, 14));
        ResolverCM.setText("Resolver");
        ResolverCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResolverCMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CMagicoLayout = new javax.swing.GroupLayout(CMagico.getContentPane());
        CMagico.getContentPane().setLayout(CMagicoLayout);
        CMagicoLayout.setHorizontalGroup(
            CMagicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CMagicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CMagicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelCuadradoMagico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CMagicoLayout.createSequentialGroup()
                        .addComponent(SelTamanio, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ResolverCM)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CMagicoLayout.setVerticalGroup(
            CMagicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CMagicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CMagicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResolverCM, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(SelTamanio, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelCuadradoMagico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MATsis");

        jToolBar1.setRollover(true);

        NuevaMatriz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Nuevo.png"))); // NOI18N
        NuevaMatriz.setText("Nuevo");
        NuevaMatriz.setFocusable(false);
        NuevaMatriz.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NuevaMatriz.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        NuevaMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevaMatrizActionPerformed(evt);
            }
        });
        jToolBar1.add(NuevaMatriz);

        RedimensionarMatriz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/redimensionar.png"))); // NOI18N
        RedimensionarMatriz.setText("Redimensionar");
        RedimensionarMatriz.setFocusable(false);
        RedimensionarMatriz.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        RedimensionarMatriz.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(RedimensionarMatriz);

        ModificarMatriz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Editar.png"))); // NOI18N
        ModificarMatriz.setText("Modificar");
        ModificarMatriz.setFocusable(false);
        ModificarMatriz.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ModificarMatriz.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ModificarMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarMatrizActionPerformed(evt);
            }
        });
        jToolBar1.add(ModificarMatriz);
        jToolBar1.add(jSeparator1);

        AbrirFichero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.png"))); // NOI18N
        AbrirFichero.setText("Abrir");
        AbrirFichero.setFocusable(false);
        AbrirFichero.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AbrirFichero.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AbrirFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirFicheroActionPerformed(evt);
            }
        });
        jToolBar1.add(AbrirFichero);

        GuardarFichero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        GuardarFichero.setText("Guardar");
        GuardarFichero.setFocusable(false);
        GuardarFichero.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GuardarFichero.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GuardarFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarFicheroActionPerformed(evt);
            }
        });
        jToolBar1.add(GuardarFichero);
        jToolBar1.add(jSeparator2);

        OperacionesBasicas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/operacionB.png"))); // NOI18N
        OperacionesBasicas.setText("Operaciones Basicas");
        OperacionesBasicas.setFocusable(false);
        OperacionesBasicas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        OperacionesBasicas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        OperacionesBasicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperacionesBasicasActionPerformed(evt);
            }
        });
        jToolBar1.add(OperacionesBasicas);

        OperacionesAvanzadas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/operacionC.png"))); // NOI18N
        OperacionesAvanzadas.setText("Operaciones Avanzadas");
        OperacionesAvanzadas.setFocusable(false);
        OperacionesAvanzadas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        OperacionesAvanzadas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        OperacionesAvanzadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperacionesAvanzadasActionPerformed(evt);
            }
        });
        jToolBar1.add(OperacionesAvanzadas);
        jToolBar1.add(jSeparator3);

        CMagic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/cmagico.png"))); // NOI18N
        CMagic.setText("Cuadrado Magico");
        CMagic.setFocusable(false);
        CMagic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CMagic.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        CMagic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CMagicActionPerformed(evt);
            }
        });
        jToolBar1.add(CMagic);
        jToolBar1.add(jSeparator5);

        AcercaDe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/acerca.png"))); // NOI18N
        AcercaDe.setText("Acerca de");
        AcercaDe.setFocusable(false);
        AcercaDe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AcercaDe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcercaDeActionPerformed(evt);
            }
        });
        jToolBar1.add(AcercaDe);
        jToolBar1.add(jSeparator4);

        Salirme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/salir.png"))); // NOI18N
        Salirme.setText("Salir");
        Salirme.setFocusable(false);
        Salirme.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Salirme.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Salirme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirmeActionPerformed(evt);
            }
        });
        jToolBar1.add(Salirme);

        PanelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 0, 51), new java.awt.Color(0, 0, 0)));

        PanelResultado.setEditable(false);
        PanelResultado.setFont(new java.awt.Font("Candara", 0, 18));
        jScrollPane1.setViewportView(PanelResultado);

        PanelTamanio.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 51)));
        jPanel4.setEnabled(false);

        jLabel2.setText("Filas : ");

        NumeroFilas.setFont(new java.awt.Font("Tahoma", 0, 12));
        NumeroFilas.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(1), null, Integer.valueOf(1)));
        NumeroFilas.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(NumeroFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(NumeroFilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2))
        );

        EsCuadrada.setText("M. Cuadrada.");
        EsCuadrada.setEnabled(false);
        EsCuadrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EsCuadradaActionPerformed(evt);
            }
        });

        EsRectangular.setText("M. Rectangular");
        EsRectangular.setEnabled(false);
        EsRectangular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EsRectangularActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 102)));

        jLabel3.setText("Columnas : ");

        Numerocolumnas.setFont(new java.awt.Font("Tahoma", 0, 12));
        Numerocolumnas.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(1), null, Integer.valueOf(1)));
        Numerocolumnas.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(Numerocolumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(Numerocolumnas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        BotonAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/crear.png"))); // NOI18N
        BotonAceptar.setText("Aceptar");
        BotonAceptar.setEnabled(false);
        BotonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelTamanioLayout = new javax.swing.GroupLayout(PanelTamanio);
        PanelTamanio.setLayout(PanelTamanioLayout);
        PanelTamanioLayout.setHorizontalGroup(
            PanelTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTamanioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTamanioLayout.createSequentialGroup()
                        .addGroup(PanelTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonAceptar))
                    .addGroup(PanelTamanioLayout.createSequentialGroup()
                        .addComponent(EsCuadrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EsRectangular)))
                .addContainerGap())
        );
        PanelTamanioLayout.setVerticalGroup(
            PanelTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTamanioLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(BotonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTamanioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EsCuadrada)
                    .addComponent(EsRectangular, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        PanelMatriz.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 102), new java.awt.Color(0, 0, 51)));

        javax.swing.GroupLayout PanelMatrizLayout = new javax.swing.GroupLayout(PanelMatriz);
        PanelMatriz.setLayout(PanelMatrizLayout);
        PanelMatrizLayout.setHorizontalGroup(
            PanelMatrizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sp, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
        );
        PanelMatrizLayout.setVerticalGroup(
            PanelMatrizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sp, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
        );

        BotonInsertar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/insertar.png"))); // NOI18N
        BotonInsertar.setText("Insertar");
        BotonInsertar.setEnabled(false);
        BotonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInsertarActionPerformed(evt);
            }
        });

        BotonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/cancelarx.png"))); // NOI18N
        BotonCancelar.setText("Cancelar");
        BotonCancelar.setEnabled(false);

        BotonLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/limpiar.png"))); // NOI18N
        BotonLimpiar.setText("Limpiar");
        BotonLimpiar.setEnabled(false);
        BotonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPrincipalLayout.createSequentialGroup()
                        .addComponent(BotonInsertar)
                        .addGap(4, 4, 4)
                        .addComponent(BotonLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(PanelMatriz, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PanelTamanio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPrincipalLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(PanelPrincipalLayout.createSequentialGroup()
                        .addComponent(PanelTamanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(PanelMatriz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonInsertar)
                            .addComponent(BotonLimpiar)
                            .addComponent(BotonCancelar))
                        .addGap(63, 63, 63))))
        );

        MArchivo.setText("Archivo");

        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        MArchivo.add(abrir);

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        MArchivo.add(guardar);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        MArchivo.add(salir);

        jMenuBar1.add(MArchivo);

        MEditar.setText("Editar");

        Reiniar.setText("Reiniciar programa");
        MEditar.add(Reiniar);

        jMenuBar1.add(MEditar);

        MOperaciones.setText("Operaciones");

        MOBasicas.setText("Basicas");

        MOSuma.setText("Suma");
        MOBasicas.add(MOSuma);

        MOMultiplicacion.setText("Multiplicacion");
        MOBasicas.add(MOMultiplicacion);

        MOperaciones.add(MOBasicas);

        MOAvanzadas.setText("Avanzadas");

        MODeterminante.setText("Determinante");
        MOAvanzadas.add(MODeterminante);

        MOInversa.setText("Inversa");
        MOAvanzadas.add(MOInversa);

        MOAdjunta.setText("Adjunta");
        MOAvanzadas.add(MOAdjunta);

        MOEscalonada.setText("Escalonada");
        MOAvanzadas.add(MOEscalonada);

        MOTranspuesta.setText("Transpuesta");
        MOAvanzadas.add(MOTranspuesta);

        MOTraza.setText("Traza");
        MOAvanzadas.add(MOTraza);

        MOOtro.setText("otro");
        MOAvanzadas.add(MOOtro);

        MOperaciones.add(MOAvanzadas);

        jMenuBar1.add(MOperaciones);

        MComplementos.setText("Complementos");
        MComplementos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MComplementosActionPerformed(evt);
            }
        });

        CuadradoMagico.setText("Cuadrado Magico");
        CuadradoMagico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuadradoMagicoActionPerformed(evt);
            }
        });
        MComplementos.add(CuadradoMagico);

        jMenuBar1.add(MComplementos);

        MAyuda.setText("Ayuda");

        Manual.setText("Manual");
        MAyuda.add(Manual);

        AcercaDeMi.setText("Acerca de");
        AcercaDeMi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcercaDeMiActionPerformed(evt);
            }
        });
        MAyuda.add(AcercaDeMi);

        jMenuBar1.add(MAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
            .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirmeActionPerformed
        // Boton Salir
        salirme();
}//GEN-LAST:event_SalirmeActionPerformed

    private void NuevaMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevaMatrizActionPerformed
        //Codigo para ingresar una nueva matriz
        ActivaTamanio();
}//GEN-LAST:event_NuevaMatrizActionPerformed

    private void EsCuadradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EsCuadradaActionPerformed
        // Para el primer radio boton
        EsRectangular.setSelected(false);
        ActivaCuadrada();
}//GEN-LAST:event_EsCuadradaActionPerformed

    private void EsRectangularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EsRectangularActionPerformed
        // Para el segundo Radio boton
        EsCuadrada.setSelected(false);
        ActivaRectangular();
}//GEN-LAST:event_EsRectangularActionPerformed

    private void BotonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAceptarActionPerformed
        // Para aceptar el tamaño de las matrices
        if(cuadrada){
            filas = Integer.parseInt(NumeroFilas.getValue()+"");
            columnas = filas;
        } else{
            filas = Integer.parseInt(NumeroFilas.getValue()+"");
            columnas = Integer.parseInt(Numerocolumnas.getValue()+"");
        }

        BotonAceptar.setEnabled(false);
        BotonInsertar.setEnabled(true);
        BotonLimpiar.setEnabled(true);
        BotonCancelar.setEnabled(true);

        nueva_matriz();
        //
}//GEN-LAST:event_BotonAceptarActionPerformed

    private void BotonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInsertarActionPerformed
        // Sirve para guardar en menoria la matriz y mostrarla

        mat[IndiceNombreMatriz].EstableceValoresArray(recoge_valores());
        Salida += mat[IndiceNombreMatriz].info_matriz() + "\n";
        PanelResultado.setText(Salida);
        BotonInsertar.setEnabled(false);
}//GEN-LAST:event_BotonInsertarActionPerformed

    private void BotonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonLimpiarActionPerformed
        // Para limpiar la matriz creada
        LimpiarMatriz();
    }//GEN-LAST:event_BotonLimpiarActionPerformed

    private void acerca_deMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acerca_deMousePressed
        // Para obtener la posicion inicial del cuadro de dialogo
        Dpos_xi = evt.getX();
        Dpos_yi = evt.getY();
        muevete = true;
}//GEN-LAST:event_acerca_deMousePressed

    private void acerca_deMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acerca_deMouseDragged
        // Para obtener la posicion final de la ventana y desplazarla
        if(muevete){
            Dpos_xf = evt.getX();
            Dpos_yf = evt.getY();
            acerca_de.setLocation(Dpos_xf - Dpos_xi + acerca_de.getX(), Dpos_yf - Dpos_yi + acerca_de.getY());
        }
}//GEN-LAST:event_acerca_deMouseDragged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Metodo para desaparecer la ventana de dialogo acerca de
        acerca_de.hide();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcercaDeActionPerformed
        // para mostrar ventana del acerca de
        Acerca_de_Mi();
    }//GEN-LAST:event_AcercaDeActionPerformed

    private void OperacionesBasicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperacionesBasicasActionPerformed
        // para mostrar la venta de operaciones basicas
        Sel_matriz1.setModel(new DefaultComboBoxModel(ListaMatrices()));
        Sel_matriz2.setModel(new DefaultComboBoxModel(ListaMatrices()));
        Dialogo_oBasicas.setSize(281, 172);
        Dialogo_oBasicas.setVisible(true);
    }//GEN-LAST:event_OperacionesBasicasActionPerformed

    private void OperacionesAvanzadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperacionesAvanzadasActionPerformed
        // Para mostrar la ventana de seleccion de operaciones basicas
        Sel_matriz.setModel(new DefaultComboBoxModel(ListaMatrices()));
        Dialogo_oAvanzadas.setSize(304, 217);
        Dialogo_oAvanzadas.setVisible(true);
    }//GEN-LAST:event_OperacionesAvanzadasActionPerformed

    private void ResolverAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResolverAActionPerformed
        // Boton que sirve para resolver las operaciones avanzadas
        int op = Sel_operacionA.getSelectedIndex();
        int index = Sel_matriz.getSelectedIndex();
        matriz temp = mat[index];
        matriz temp2 = new matriz();

        switch(op){
            case 0:
                if(EsCuadrada(index)){
                    Salida += "det("+temp.nombrex()+") = "+temp.determinante() + "\n";
                    PanelResultado.setText(Salida);
                }
                else{
                    JOptionPane.showMessageDialog(this, "La operacion no es posible, la matriz tiene que ser cuadrada");
                }
            break;

            case 1:
                if(EsCuadrada(index)){
                    temp2 = temp.inversa_matriz();
                    Salida += "Inversa("+temp.nombrex()+")  : \n" + temp2.escribir_matriz();
                    ActualizaPanelDeResultados();
                }
                else{
                    JOptionPane.showMessageDialog(this, "La operacion no es posible, la matriz tiene que ser cuadrada");
                }
            break;

            case 2:
                JOptionPane.showMessageDialog(this, "Esta operacion todavia no esta implentada");
            break;

            case 3:
                temp2 = temp.escalonada_matriz();
                Salida += "Escalonada ("+temp.nombrex()+") : \n" +temp2.escribir_matriz();
                ActualizaPanelDeResultados();
            break;

            case 4:
                temp2 = temp.transpuesta();
                Salida += "Transpuesta ("+temp.nombrex()+") : \n" +temp2.escribir_matriz();
                ActualizaPanelDeResultados();
            break;

            case 5:
                Salida += "Traza ("+temp.nombrex()+") = " +temp.traza() + "\n";
                ActualizaPanelDeResultados();
            break;

            default:
                JOptionPane.showMessageDialog(this, "La operacion todavia no ha sido implementada");
        }

       Dialogo_oAvanzadas.hide();

    }//GEN-LAST:event_ResolverAActionPerformed

    private void ResolverBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResolverBActionPerformed
        // Para resolver la operacion basica
        int index1 = Sel_matriz1.getSelectedIndex();
        int index2 = Sel_matriz2.getSelectedIndex();
        int op = Sel_operacionB.getSelectedIndex();
        matriz temp1 = mat[index1];
        matriz temp2 = mat[index2];
        matriz temp3 = new matriz();

        switch(op){
            case 0:
                if(temp1.NumeroFilas() == temp2.NumeroFilas() && temp1.NumeroColumnas() == temp2.NumeroColumnas()){
                    temp3 = temp3.sumar_matriz(temp1, temp2);
                    Salida += "Suma (" + temp1.nombrex() + " + " + temp2.nombrex() + ") : \n" + temp3.escribir_matriz() + "\n";
                    ActualizaPanelDeResultados();
                }
                else
                    JOptionPane.showMessageDialog(this, "No se puede realizar operacion, Las matrices tienen que ser del igual orden");
            break;

            case 1:
                if(temp1.NumeroColumnas() == temp2.NumeroFilas()){
                    temp3 = temp3.multiplica_matriz(temp1, temp2);
                    Salida += "Multiplica (" + temp1.nombrex() + " * " + temp2.nombrex() + ") : \n" + temp3.escribir_matriz() + "\n";
                    ActualizaPanelDeResultados();
                }
                else
                    JOptionPane.showMessageDialog(this, "La Operacion no se puede realizar, No cumple con las reglas de la multplicacion");
            break;

            default:
                JOptionPane.showMessageDialog(this, "AL aprecer la operacion todavia no esta implementada...");
        }

        Dialogo_oBasicas.hide();

    }//GEN-LAST:event_ResolverBActionPerformed

    public void Acerca_de_Mi(){
        acerca_de.setSize(342, 285);
        acerca_de.setVisible(true);
    }

    private void GuardarFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarFicheroActionPerformed
        // Metodo para guardar en un archivo de texto
        GurdarMatriz();
    }//GEN-LAST:event_GuardarFicheroActionPerformed

    private void AbrirFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirFicheroActionPerformed
        // Metodo para abrir un fichero de texto que contenga informacion del programa
//        String NombreFichero = new JFileChooser().showOpenDialog(null,"Abrir fichero...");
//        FileReader fichero = new FileReader("C.");
        AbrirMatriz();

    }//GEN-LAST:event_AbrirFicheroActionPerformed

    private void ModificarMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarMatrizActionPerformed
        // Metodo para modificar una matriz
        sel_matrizm.setModel(new DefaultComboBoxModel(ListaMatrices()));
        Modificar.setSize(304, 193);
        Modificar.setVisible(true);
        
    }//GEN-LAST:event_ModificarMatrizActionPerformed

    private void AcercaDeMiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcercaDeMiActionPerformed
        // Evento para el menu de opcion acerca
        Acerca_de_Mi();
    }//GEN-LAST:event_AcercaDeMiActionPerformed

    private void ResolverCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResolverCMActionPerformed
        //Evento para el cuadrado magico
        int orden = Integer.parseInt(SelTamanio.getValue()+"");
        if(orden %2 == 0){
            JOptionPane.showMessageDialog(this, "El orden del cuadrado debe ser un valor impar");
        }
        else{
           crea_tabla(magico(orden), orden);
        }
    }//GEN-LAST:event_ResolverCMActionPerformed

    private void CuadradoMagicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuadradoMagicoActionPerformed
        // Para mostrar el cuadro de dialogo del cuadrado magico
        CMagico.setSize(371, 366);
        CMagico.setVisible(true);
    }//GEN-LAST:event_CuadradoMagicoActionPerformed

    private void ModificarMtrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarMtrizActionPerformed
        // boton para modificar la matriz seleccionada
        // //Redefinimos los tamaños de la matris vacia a crear
        filas = mat[sel_matrizm.getSelectedIndex()].NumeroFilas();
        columnas = mat[sel_matrizm.getSelectedIndex()].NumeroColumnas();
        crea_tabla();
        float[][] m = mat[sel_matrizm.getSelectedIndex()].DevuelveValoresArray();
        for(int i=0;i<filas;i++){
            for(int j=0;j<columnas;j++){
                tabla.setValueAt(m[i][j], i, j);
            }
        }
}//GEN-LAST:event_ModificarMtrizActionPerformed

    private void Sel_matrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sel_matrizActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Sel_matrizActionPerformed

    private void MComplementosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MComplementosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MComplementosActionPerformed

    private void CMagicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CMagicActionPerformed
        // TODO add your handling code here:
        CMagico.setSize(371, 366);
        CMagico.setVisible(true);
}//GEN-LAST:event_CMagicActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        // TODO add your handling code here:
        AbrirMatriz();
    }//GEN-LAST:event_abrirActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
        GurdarMatriz();
    }//GEN-LAST:event_guardarActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        salirme();
    }//GEN-LAST:event_salirActionPerformed


    ///////////////////////////////////////////////////
    private int Dpos_xi;
    private int Dpos_yi;
    private int Dpos_xf;
    private int Dpos_yf;

    boolean muevete = false;
    ///////////////////////////////////////////////////
    //mis variables declaradas
    char [] NombreMatriz = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'};
    int IndiceNombreMatriz = -1;
    matriz mat[] = new matriz[15];
    //private JTextField tabla[][];
    private Font fuente = new Font("Tahoma", 1, 14);
    private int filas;
    private int columnas;
    private boolean cuadrada = false;
    private String Salida = "";
    DefaultTableModel modelo;
    JTable tabla;
    Color CeldaMatriz = new Color(0, 0, 100);
    ///////////////////////////////////////////////////
    //mis metodos creados para utilizar en el programa

    //Metodo para salir del programa
    public void salirme(){
        System.exit(0);
    }

    //Metodo para crear unanueva matriz
    public void nueva_matriz(){
        try{
            IndiceNombreMatriz++;
            crea_tabla();
            mat[IndiceNombreMatriz] = new matriz(NombreMatriz[IndiceNombreMatriz]);
        }catch(Exception ex){JOptionPane.showMessageDialog(this, "Hubo un error en : \n" + ex.getLocalizedMessage());};;

    }

        //Metodo para crear un tablero de cuadro de textos
        private void crea_tabla(){
            Object[] titulos  = new Object[columnas]; 
            Object[][] temporal = new Object[filas][columnas];

            for(int m=0;m<filas;m++)
                for(int n=0;n<columnas;n++){
                    temporal[m][n] =" ";
                }

            for(int n=0;n<columnas;n++)
                titulos[n] = n+1;

            try{
                modelo = new DefaultTableModel(temporal, titulos);
                tabla = new JTable(modelo);
                sp.setViewportView(tabla);  
                tabla.setSize(40, 40);
            }catch(Exception e){JOptionPane.showMessageDialog(null,"Error en la creacion de la matriz en: \n"+e.getLocalizedMessage());};
            tabla.setCellSelectionEnabled(true);
            PanelMatriz.setVisible(false);
            PanelMatriz.setVisible(true);
        }

        //Metodo que recoge los valores de la matriz insertada y retorna un array
        public float[][] recoge_valores(){
            float [][]valores = new float[filas][columnas];
            try{
                
            tabla.editCellAt(0, 0);
            
            for(int i=0;i<filas;i++)
                for(int j=0;j<columnas;j++){
                    if(tabla.getValueAt(i, j).equals("") == true)
                        valores[i][j] = 0;
                    else
                        valores[i][j] = Float.parseFloat(""+tabla.getValueAt(i, j));
                }
            }catch(Exception ex){JOptionPane.showMessageDialog(this, "Dato Erroneo, asegurese de que sea un valor numerico");};

            return valores;
        }

        //Metodo para activar el panel de seleccion
        public void ActivaCuadrada(){
            NumeroFilas.setEnabled(true);
            Numerocolumnas.setEnabled(false);
            cuadrada = true;
        }
        
        public void ActivaRectangular(){
            NumeroFilas.setEnabled(true);
            Numerocolumnas.setEnabled(true);
            cuadrada = false;
            
        }

        //Este metodo solo nos permite, que sea una matriz cuadrada
        public void SoloCuadrada(boolean SiNo){
            NumeroFilas.setEnabled(true);
            Numerocolumnas.setEnabled(false);
            EsRectangular.setSelected(false);
            EsRectangular.setEnabled(false);
            cuadrada = true;
        }

        public void ActivaTamanio(){
  
            BotonAceptar.setEnabled(true);
            
            if(cuadrada){
               SoloCuadrada(true);
               EsCuadrada.setEnabled(true);
               EsCuadrada.setSelected(true);
            }
                
            else{
                ActivaRectangular();
                EsRectangular.setSelected(true);
                EsCuadrada.setEnabled(true);
                EsRectangular.setEnabled(true);
            }
                

        }
         

        public void LimpiarMatriz(){
            for(int i=0;i<filas;i++)
                for(int j=0;j<columnas;j++)
                    tabla.setValueAt("", i, j);
        }

        //metodo para recoger los nombres de las matrices que han sido creadas
        public Object[] ListaMatrices(){
            Object[] lista = new Object[IndiceNombreMatriz+1];
            for(int i=0;i<(IndiceNombreMatriz+1);i++)
                lista[i] = NombreMatriz[i];
            return lista;
        }

        //metodo para validar si es una matriz cuadrada
        public boolean EsCuadrada(int index){
            if(mat[index].NumeroFilas() == mat[index].NumeroColumnas())
                return true;
            else
                return false;
        }

        public void ActualizaPanelDeResultados(){
            PanelResultado.setText(Salida);
        }
    ///////////////////////////////////////////////////
    //Metodo de utlidad para rellenar el cuadrado magico
	public Object[][] magico(int orden){
		int fil=0,col=orden/2;
        Object [][] CMagico = new Object[orden][orden];
		for(int c=1;c<=orden*orden;c++){
			CMagico[fil][col]=c;
			if(c%orden==0)
				fil++;
			else{
				if(fil==0)
					fil=orden-1;
				else
					fil--;
				if(col==orden-1)
					col=0;
				else
					col++;
			}
		}

        return CMagico;
	}

    private void crea_tabla(Object[][] temporal,int orden){
            Object[] titulos  = new Object[orden];

            for(int n=0;n<orden;n++)
                titulos[n] = ""+(n+1)+"";

            try{
                Font fuente = new Font("Arial", 1, 17);
                Color ColorLetras = new Color(0, 50, 100);
                Color ColorFondo = new Color(255, 255, 255);
                Color ColorRejilla = new Color(0,0,0);
                DefaultTableModel modelo = new DefaultTableModel(temporal, titulos);
                JTable tabla = new JTable(modelo);
                tabla.setFont(fuente);
                tabla.setForeground(ColorLetras);
                tabla.setBackground(ColorFondo);
                sp2.setViewportView(tabla);
                tabla.setSize(40, 40);
                tabla.setGridColor(ColorRejilla);
                tabla.setCellSelectionEnabled(true);
                PanelCuadradoMagico.setVisible(false);
                PanelCuadradoMagico.setVisible(true);
            }catch(Exception e){JOptionPane.showMessageDialog(null,"Error en la creacion de la matriz en: \n"+e.getLocalizedMessage());};
        }

     javax.swing.filechooser.FileFilter filtro = new javax.swing.filechooser.FileFilter() {

            @Override
            public boolean accept(File f) {
                String extension = "";
                if(f.getPath().lastIndexOf('.') > 0 )
                    extension = f.getPath().substring(f.getPath().lastIndexOf('.')+ 1).toLowerCase();
                if(extension.equals("") != true)
                    return extension.equals("jmat");
                else
                    return f.isDirectory();
            }

            @Override
            public String getDescription() {
                return "Documentos Matriciales (*.jmat) ";
            }
        };

    //Manejo de Streams y ficheros que ayudan a que los archivos se guarden y abran
        public void AbrirMatriz(){

        String texto = "";

        JFileChooser DialogoAbrir = new JFileChooser();
        DialogoAbrir.addChoosableFileFilter(filtro);
        DialogoAbrir.setFileSelectionMode(JFileChooser.FILES_ONLY);
        String textt="";
        int estado = DialogoAbrir.showOpenDialog(this);
        if(estado == JFileChooser.APPROVE_OPTION){
            try{
                BufferedReader stream = new BufferedReader(new FileReader(DialogoAbrir.getSelectedFile()));

                while((texto =stream.readLine())!=null){
                    IndiceNombreMatriz++;
                    mat[IndiceNombreMatriz] = AnalizaCadena(texto);
                    Salida += mat[IndiceNombreMatriz].info_matriz() + "\n";
                    PanelResultado.setText(Salida);
                }
                    

            }catch(Exception ex){JOptionPane.showMessageDialog(this, "Error al cargar el fichero");};
        }

    }

    public void GurdarMatriz(){
        if(IndiceNombreMatriz > 0){
            JFileChooser fch = new JFileChooser();
        fch.setFileSelectionMode( JFileChooser.FILES_ONLY );

        fch.setFileFilter(filtro);
        int result = fch.showSaveDialog( this );


        if ( result == JFileChooser.CANCEL_OPTION )
            return;

        else
            try {
                String textemp = "";
                for(int i=0;i<=IndiceNombreMatriz;i++){
                    textemp += mat[i].MatrizTexto()+"\n";
                }
                FileOutputStream fos = new FileOutputStream( fch.getSelectedFile() + ".jmat" );
                BufferedOutputStream bos = new BufferedOutputStream( fos );
                bos.write( textemp.getBytes() );
                bos.flush();
                fos.close();
            }

            catch( Exception e )
            {
                JOptionPane.showMessageDialog(this, "Error al guardar el fichero", "Error", JOptionPane.ERROR_MESSAGE );
            }
        }

        else{
            JOptionPane.showMessageDialog(this, "Todavia no existe informacion para guardar en un fichero");
        }
        
    }

    //utilidad que sirve para analizar las cadenas de texto y convertirlas a matrices
    public matriz AnalizaCadena(String cadena){

        int tamanio = cadena.length();
        int i=2;
        int filas = 1;
        int columnas = 1;

        int indF = 0;
        int indC = 0;
        String numero = "0";

        float[][] array;
        matriz matx = new matriz(cadena.charAt(0));

        while(i<tamanio){
            char actual = cadena.charAt(i);
            if(actual == ',')
                columnas++;
            else if(actual == ';'){
                columnas = 1;
                filas++;
            }
            i++;
        }
        array = new float[filas][columnas];

        i = 2;
        while(i<tamanio){
            char actual = cadena.charAt(i);
            if(actual == '{')
                System.out.println("Aqui se inicia la matriz...");

            else if(actual == ',')
                indC++;

            else if(actual == ';'){
                indC = 0;
                indF++;
            }

            else if(actual == '}')
                System.out.println("Aqui termina la matriz...");

            else{
                numero = ""+cadena.charAt(i);
                while(cadena.charAt(i+1) != ',' && cadena.charAt(i+1) != ';' && cadena.charAt(i+1) != '}' && cadena.charAt(i+1) != '{'){
                    i++;
                    numero += cadena.charAt(i);
                }
            }

            i++;
            array[indF][indC] = Float.parseFloat(numero);
        }

        matx.EstableceValoresArray(array);

        return matx;
    }



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {

        try{
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        }catch(Exception ex){JOptionPane.showMessageDialog(null, "Hubo un error en : "+ex.getLocalizedMessage());};
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AbrirFichero;
    private javax.swing.JButton AcercaDe;
    private javax.swing.JMenuItem AcercaDeMi;
    private javax.swing.JButton BotonAceptar;
    private javax.swing.JButton BotonCancelar;
    private javax.swing.JButton BotonInsertar;
    private javax.swing.JButton BotonLimpiar;
    private javax.swing.JButton CMagic;
    private javax.swing.JDialog CMagico;
    private javax.swing.JMenuItem CuadradoMagico;
    private javax.swing.JDialog Dialogo_oAvanzadas;
    private javax.swing.JDialog Dialogo_oBasicas;
    private javax.swing.JRadioButton EsCuadrada;
    private javax.swing.JRadioButton EsRectangular;
    private javax.swing.JButton GuardarFichero;
    private javax.swing.JMenu MArchivo;
    private javax.swing.JMenu MAyuda;
    private javax.swing.JMenu MComplementos;
    private javax.swing.JMenu MEditar;
    private javax.swing.JMenuItem MOAdjunta;
    private javax.swing.JMenu MOAvanzadas;
    private javax.swing.JMenu MOBasicas;
    private javax.swing.JMenuItem MODeterminante;
    private javax.swing.JMenuItem MOEscalonada;
    private javax.swing.JMenuItem MOInversa;
    private javax.swing.JMenuItem MOMultiplicacion;
    private javax.swing.JMenuItem MOOtro;
    private javax.swing.JMenuItem MOSuma;
    private javax.swing.JMenuItem MOTranspuesta;
    private javax.swing.JMenuItem MOTraza;
    private javax.swing.JMenu MOperaciones;
    private javax.swing.JMenuItem Manual;
    private javax.swing.JDialog Modificar;
    private javax.swing.JButton ModificarMatriz;
    private javax.swing.JButton ModificarMtriz;
    private javax.swing.JButton NuevaMatriz;
    private javax.swing.JSpinner NumeroFilas;
    private javax.swing.JSpinner Numerocolumnas;
    private javax.swing.JButton OperacionesAvanzadas;
    private javax.swing.JButton OperacionesBasicas;
    private javax.swing.JPanel PanelCuadradoMagico;
    private javax.swing.JPanel PanelMatriz;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JTextPane PanelResultado;
    private javax.swing.JPanel PanelTamanio;
    private javax.swing.JButton RedimensionarMatriz;
    private javax.swing.JMenuItem Reiniar;
    private javax.swing.JButton ResolverA;
    private javax.swing.JButton ResolverB;
    private javax.swing.JButton ResolverCM;
    private javax.swing.JButton Salirme;
    private javax.swing.JSpinner SelTamanio;
    private javax.swing.JComboBox Sel_matriz;
    private javax.swing.JComboBox Sel_matriz1;
    private javax.swing.JComboBox Sel_matriz2;
    private javax.swing.JComboBox Sel_operacionA;
    private javax.swing.JComboBox Sel_operacionB;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JDialog acerca_de;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem salir;
    private javax.swing.JComboBox sel_matrizm;
    private javax.swing.JScrollPane sp;
    private javax.swing.JScrollPane sp2;
    // End of variables declaration//GEN-END:variables

}
